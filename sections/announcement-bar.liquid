{% style %}
  {%- if section.settings.rotate_banners -%}
  .flickity-prev-next-button {
    display: none;
  }

  .announcement-bar {
    border-bottom: none;
  }

  .announcement {
    border-bottom: .1rem solid rgba(var(--color-foreground),.08);
  }
  {%- endif -%}

  @media screen and (max-width: 767px) {
    localization-form {
      display: none;
    }
  }
{% endstyle %}


{%- if section.settings.rotate_banners and section.blocks.size > 1 -%}
<div class="announcement-bar announcements-container main-carousel" data-flickity='{ "autoPlay": {{section.settings.rotate_interval | times: 1000 }}, "wrapAround": true }'>
{%- else -%}
<div class="announcement-bar announcements-container">
{%- endif -%}

{%- for block in section.blocks -%}
  {%- case block.type -%}
    {%- when 'announcement' -%}
      <div class="announcement color-{{ block.settings.color_scheme }} gradient" role="region" aria-label="{{ 'sections.header.announcement' | t }}" {{ block.shopify_attributes }}>
        {%- if block.settings.text != blank -%}
            {%- if block.settings.link != blank -%}
              <a href="{{ block.settings.link }}" class="announcement-bar__link link link--text focus-inset animate-arrow">
            {%- endif -%}
                <p class="announcement-bar__message h5" style="width: 100vw">
                  {{ block.settings.icon }} {{ block.settings.text | escape }}
                  {%- if block.settings.link != blank -%}
                    {% render 'icon-arrow' %}
                  {%- endif -%}
                </p>
            {%- if block.settings.link != blank -%}
              </a>
            {%- endif -%}
          {%- endif -%}
        </div>
  {%- endcase -%}
{%- endfor -%}

</div>

{%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
  <noscript>
    {%- form 'localization', id: 'FooterCountryFormNoScript', class: 'localization-form' -%}
      <div class="localization-form__select">
        <h2 class="visually-hidden" id="FooterCountryLabelNoScript">{{ 'localization.country_label' | t }}</h2>
        <select class="localization-selector link" name="country_code" aria-labelledby="FooterCountryLabelNoScript">
          {%- for country in localization.available_countries -%}
            <option value="{{ country.iso_code }}" {%- if country.iso_code == localization.country.iso_code %} selected{% endif %}>
              {{ country.name }} ({{ country.currency.iso_code }} {{ country.currency.symbol }})
            </option>
          {%- endfor -%}
        </select>
        {% render 'icon-caret' %}
      </div>
      <button class="button button--tertiary">{{ 'localization.update_country' | t }}</button>
    {%- endform -%}
  </noscript>
  <localization-form>
    {%- form 'localization', id: 'FooterCountryForm', class: 'localization-form' -%}
      <div class="no-js-hidden">
        {% comment %} <h2 class="caption-large" id="FooterCountryLabel">{{ 'localization.country_label' | t }}</h2> {% endcomment %}
        <div class="disclosure">
          <button type="button" class="disclosure__button localization-form__select localization-selector link link--text caption-large" aria-expanded="false" aria-controls="FooterCountryList" aria-describedby="FooterCountryLabel">
            {{ localization.country.currency.iso_code }}
            {% render 'icon-caret' %}
          </button>
          <ul id="FooterCountryList" role="list" class="disclosure__list list-unstyled" hidden>
            {%- for country in localization.available_countries -%}
              <li class="disclosure__item" tabindex="-1">
                <a class="link link--text disclosure__link caption-large{% if country.iso_code == localization.country.iso_code %} disclosure__link--active{% endif %} focus-inset" href="#"{% if country.iso_code == localization.country.iso_code %} aria-current="true"{% endif %} data-value="{{ country.iso_code }}">
                 <span class="localization-form__currency">{{ country.iso_code }} </span>
                </a>
              </li>
            {%- endfor -%}
          </ul>
        </div>
        <input type="hidden" name="country_code" value="{{ localization.country.iso_code }}">
      </div>
    {%- endform -%}
  </localization-form>
{%- endif -%}

{%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
  <noscript>
    {%- form 'localization', id: 'FooterLanguageFormNoScript', class: 'localization-form' -%}
      <div class="localization-form__select">
        <h2 class="visually-hidden" id="FooterLanguageLabelNoScript">{{ 'localization.language_label' | t }}</h2>
        <select class="localization-selector link" name="locale_code" aria-labelledby="FooterLanguageLabelNoScript">
          {%- for language in localization.available_languages -%}
            <option value="{{ language.iso_code }}" lang="{{ language.iso_code }}" {%- if language.iso_code == localization.language.iso_code %} selected{% endif %}>
              {{ language.endonym_name | capitalize }}
            </option>
          {%- endfor -%}
        </select>
        {% render 'icon-caret' %}
      </div>
      <button class="button button--tertiary">{{ 'localization.update_language' | t }}</button>
    {%- endform -%}
  </noscript>

  <localization-form>
    {%- form 'localization', id: 'FooterLanguageForm', class: 'localization-form' -%}
      <div class="no-js-hidden">
        <h2 class="caption-large" id="FooterLanguageLabel">{{ 'localization.language_label' | t }}</h2>
        <div class="disclosure">
          <button type="button" class="disclosure__button localization-form__select localization-selector link link--text caption-large" aria-expanded="false" aria-controls="FooterLanguageList" aria-describedby="FooterLanguageLabel">
            {{ localization.language.endonym_name | capitalize }}
            {% render 'icon-caret' %}
          </button>
          <ul id="FooterLanguageList" role="list" class="disclosure__list list-unstyled" hidden>
            {%- for language in localization.available_languages -%}
              <li class="disclosure__item" tabindex="-1">
                <a class="link link--text disclosure__link caption-large{% if language.iso_code == localization.language.iso_code %} disclosure__link--active{% endif %} focus-inset" href="#" hreflang="{{ language.iso_code }}" lang="{{ language.iso_code }}"{% if language.iso_code == localization.language.iso_code %} aria-current="true"{% endif %} data-value="{{ language.iso_code }}">
                  {{ language.endonym_name | capitalize }}
                </a>
              </li>
            {%- endfor -%}
          </ul>
        </div>
        <input type="hidden" name="locale_code" value="{{ localization.language.iso_code }}">
      </div>
    {%- endform -%}
  </localization-form>
{%- endif -%}



{% javascript %}
  class LocalizationForm extends HTMLElement {
    constructor() {
      super();
      this.elements = {
        input: this.querySelector('input[name="locale_code"], input[name="country_code"]'),
        button: this.querySelector('button'),
        panel: this.querySelector('ul'),
      };
      
      this.elements.button.addEventListener('click', this.openSelector.bind(this));
      this.elements.button.addEventListener('focusout', this.closeSelector.bind(this));
      this.addEventListener('keyup', this.onContainerKeyUp.bind(this));

      this.querySelectorAll('a').forEach(item => item.addEventListener('click', this.onItemClick.bind(this)));
    }

    hidePanel() {
      this.elements.button.setAttribute('aria-expanded', 'false');
      this.elements.panel.setAttribute('hidden', true);
    }

    onContainerKeyUp(event) {
      if (event.code.toUpperCase() !== 'ESCAPE') return;

      this.hidePanel();
      this.elements.button.focus();
    }

    onItemClick(event) {
      event.preventDefault();
      const form = this.querySelector('form');
      this.elements.input.value = event.currentTarget.dataset.value;
      if (form) form.submit();
    }

    openSelector() {
      this.elements.button.focus();
      this.elements.panel.toggleAttribute('hidden');
      this.elements.button.setAttribute('aria-expanded', (this.elements.button.getAttribute('aria-expanded') === 'false').toString());
    }

    closeSelector(event) {
      const shouldClose = event.relatedTarget && event.relatedTarget.nodeName === 'BUTTON';
      if (event.relatedTarget === null || shouldClose) {
        this.hidePanel();
      }
    }
  }

  customElements.define('localization-form', LocalizationForm);

{% endjavascript %}

{% schema %}
{
  "name": "t:sections.announcement-bar.name",
  "max_blocks": 12,
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": true,
      "label": "Enable country\/region selector"
    },
    {
      "type": "checkbox",
      "id": "rotate_banners",
      "default": true,
      "label": "Rotate announcement banners"
    },
    {
      "type": "range",
      "id": "rotate_interval",
      "min": 1.0,
      "max": 20.0,
      "step": 0.5,
      "unit": "sec",
      "label": "Font size",
      "default": 3.0
    }
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "t:sections.announcement-bar.blocks.announcement.name",
      "settings": [
          {
          "type": "html",
          "id": "icon",
          "label": "Icon"
        },
        {
          "type": "text",
          "id": "text",
          "default": "Welcome to our store",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.text.label"
        },
        {
          "type": "select",
          "id": "color_scheme",
          "options": [
            {
              "value": "background-1",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.color_scheme.options__1.label"
            },
            {
              "value": "background-2",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.color_scheme.options__2.label"
            },
            {
              "value": "inverse",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.color_scheme.options__3.label"
            },
            {
              "value": "accent-1",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.color_scheme.options__4.label"
            },
            {
              "value": "accent-2",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.color_scheme.options__5.label"
            }
          ],
          "default": "accent-1",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.color_scheme.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.link.label"
        }
       
      ]
    }
  ],
  "default": {
    "blocks": [
      {
        "type": "announcement"
      }
    ]
  }
}
{% endschema %}
